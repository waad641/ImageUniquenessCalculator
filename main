import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class ImageUniquenessCalculator {

    public static String calculateImageUniqueness(InputStream imageStream) throws IOException, NoSuchAlgorithmException {
        // Lire les données de l'image depuis le flux d'entrée
        byte[] imageData = readImageData(imageStream);

        // Calculer la valeur de hachage (hash) de l'image
        String imageHash = calculateHash(imageData);

        // Retourner la valeur de hachage
        return imageHash;
    }

    private static byte[] readImageData(InputStream imageStream) throws IOException {
        return imageStream.readAllBytes();
    }

    private static String calculateHash(byte[] data) throws NoSuchAlgorithmException {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        byte[] hashBytes = md.digest(data);
        return bytesToHex(hashBytes);
    }

    private static String bytesToHex(byte[] bytes) {
        StringBuilder sb = new StringBuilder();
        for (byte b : bytes) {
            sb.append(String.format("%02x", b));
        }
        return sb.toString();
    }
}
